# kn() - Get/set the namespace for the current k8s context. If no argument is
# passed, print the current namespace.
#
# i.e. `kn infrastructure`
# i.e. `kn -` // switches back
current_context="$(kx)"
if [ "" = "$current_context" ]; then
    if [ "" != "$1" ]; then
        >&2 echo "kubernetes context is not set"
    fi
    $(exit 1)
    return
fi

if [ "" != "$current_context" ]; then
    current_ns=$(kubectl config view -o=jsonpath="{.contexts[?(@.name==\"$(kx)\")].context.namespace}" 2> /dev/null)
fi

if [ "" = "$current_ns" ]; then
    current_ns="default"
fi
ctxkey=$(basename $current_context)
ctxkey=${ctxkey//./_}

if [ "" = "${__K8S_LAST_NAMESPACE[$ctxkey]}" ]; then
    __K8S_LAST_NAMESPACE[$ctxkey]=$current_ns
fi

if [ "" = "${__K8S_CURR_NAMESPACE[$ctxkey]}" ]; then
    __K8S_CURR_NAMESPACE[$ctxkey]=$current_ns
fi

if [ "" = "$1" ]; then
    echo $current_ns
elif [ "-" = "$1" ]; then
    kubectl config set-context $(kx) --namespace="${__K8S_LAST_NAMESPACE[$ctxkey]}" > /dev/null
    __K8S_LAST_NAMESPACE[$ctxkey]=$current_ns
    __K8S_CURR_NAMESPACE[$ctxkey]=${__K8S_LAST_NAMESPACE[$ctxkey]}
else
    kubectl config set-context $(kx) --namespace="$1" > /dev/null
    __K8S_LAST_NAMESPACE[$ctxkey]=$current_ns
    __K8S_CURR_NAMESPACE[$ctxkey]=$1
fi

export -l __K8S_LAST_NAMESPACE
export -l __K8S_CURR_NAMESPACE


# # get/set the namespace for the current k8s context
# # `kn`             - print the current namespace
# # `kn <namespace>` - set the current namespace to <namespace>
# if [ "-" = "$1" ]; then
#     a=$K8S_CURRENT_NAMESPACE
#     export K8S_CURRENT_NAMESPACE=${K8S_LAST_NAMESPACE[$K8S_CURRENT_CONTEXT]}
#     K8S_LAST_NAMESPACE[$K8S_CURRENT_CONTEXT]=$a
#     export -l K8S_LAST_NAMESPACE
#     kubectl config set-context "$K8S_CURRENT_CONTEXT" --namespace="$K8S_CURRENT_NAMESPACE"
# elif [ "" != "$1" ]; then
#     K8S_LAST_NAMESPACE[$K8S_CURRENT_CONTEXT]=$K8S_CURRENT_NAMESPACE
#     export -l K8S_LAST_NAMESPACE
#     export K8S_CURRENT_NAMESPACE=$1
#     kubectl config set-context "$K8S_CURRENT_CONTEXT" --namespace="$K8S_CURRENT_NAMESPACE"
# else
#     ns=$(kubectl config view -o=jsonpath="{.contexts[?(@.name==\"$K8S_CURRENT_CONTEXT\")].context.namespace}")
#     if [ "" = "$ns" ]; then
#         ns="default"
#     fi
#     echo "$ns"
# fi
